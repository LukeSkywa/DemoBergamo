@mixin border-radius($size){
     /* Safari 3-4, iOS 1-3.2, Android 1.6- */
  -webkit-border-radius: $size; 
  /* Firefox 1-3.6 */
  -moz-border-radius: $size; 
  /* Opera 10.5, IE 9, Safari 5, Chrome, Firefox 4, iOS 4, Android 2.1+ */
  border-radius: $size; 
}

@mixin display-grid($col-list: 0, $row-list: 0, $col-gap: 0, $row-gap: 0) {
    display: grid;
    display: -ms-grid;
  
    @if $col-list != 0 {
      @if $col-gap != 0 {
        $col: ();
        @for $i from 1 through length($col-list) {
          @if $i != length($col-list) {
            $col: append($col, nth($col-list, $i), space);
            $col: append($col, $col-gap, space);
          } @else {
            $col: append($col, nth($col-list, $i), space);
          }
        }
        -ms-grid-columns: $col;
        grid-template-columns: $col-list;
        grid-column-gap: $col-gap;
      } @else {
        grid-template-columns: $col-list;
        -ms-grid-columns: $col-list;
      }
    }
  
    @if $row-list != 0 {
      @if $row-gap != 0 {
        $row: ();
        @for $i from 1 through length($row-list) {
          @if $i != length($row-list) {
            $row: append($row, nth($row-list, $i), space);
            $row: append($row, $row-gap, space);
          } @else {
            $row: append($row, nth($row-list, $i), space);
          }
        }
        -ms-grid-rows: $row;
        grid-template-rows: $row-list;
        grid-row-gap: $row-gap;
      } @else {
        grid-template-rows: $row-list;
        -ms-grid-rows: $row-list;
      }
    }
  }
  
  @mixin grid-column($col, $with-gap: 0) {
    grid-column: $col;
    @if $with-gap != 0 {
      -ms-grid-column: $col + ($col - 1);
    } @else {
      -ms-grid-column: $col;
    }
  }
  
  @mixin grid-column-span($start, $end, $with-gap: 0) {
    grid-column-start: $start;
    grid-column-end: $end;
    $span: $end - $start;
    @if $with-gap != 0 {
      -ms-grid-column: ($start*2) - 1;
      -ms-grid-column-span: ($span*2) - 1;
    } @else {
      -ms-grid-column: $start;
      -ms-grid-column-span: $span;
    }
  }
  
  @mixin grid-row($row, $with-gap: 0) {
    grid-row: $row;
    @if $with-gap != 0 {
      -ms-grid-row: ($row*2) - 1;
    } @else {
      -ms-grid-row: $row;
    }
  }
  
  @mixin grid-row-span($start, $end, $with-gap: 0) {
    grid-row-start: $start;
    grid-row-end: $end;
    $span: $end - $start;
    @if $with-gap != 0 {
      -ms-grid-row: ($start*2) - 1;
      -ms-grid-row-span: ($span*2) - 1;
    } @else {
      -ms-grid-row: $start;
      -ms-grid-row-span: $span;
    }
  }
  
  @mixin display-flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  @mixin display-flex-Y-center-X-start {
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }
  
  @mixin display-flex-Y-center-X-end {
    display: flex;
    align-items: center;
    justify-content: flex-end;
  }
  
  @mixin display-flex-Y-start-X-center {
    display: flex;
    align-items: flex-start;
    justify-content: center;
  }
  
  @mixin display-flex-Y-start-X-end {
    display: flex;
    align-items: flex-start;
    justify-content: flex-end;
  }
  
  @mixin display-flex-Y-end-X-start {
    display: flex;
    align-items: flex-end;
    justify-content: flex-start;
  }
  
  @mixin display-flex-Y-end-X-center() {
    display: flex;
    align-items: flex-end;
    justify-content: center;
  }
  
  @mixin display-flex-Y-end-X-end {
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;
  }
  
  @mixin display-flex-Y-end-X-space-between {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  @mixin css-for-ie {
    @media all and (-ms-high-contrast: none),
    (-ms-high-contrast: active) {
      /* IE10+ CSS styles go here */
      @content;
    }
  }
  